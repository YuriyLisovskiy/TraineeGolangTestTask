openapi: 3.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/YuriyLisovskiy/TraineeGolangTestTask/1.0.0
info:
  description: |
    This API allows uploading CSV files with transactions, filtering and
    retrieving transactions from the database into JSON format or CSV file.
  contact:
    name: API Issues
    url: https://github.com/YuriyLisovskiy/TraineeGolangTestTask/issues
  version: "1.0.0"
  title: Trainee Golang Test Task API
tags:
  - name: transactions
    description: Uploading, filtering and downloading transactions
paths:
  /api/transactions/json:
    get:
      tags:
        - transactions
      summary: Get transactions in JSON format
      description: Returns paginated response with transactions with applied filters.
      operationId: getTransactionsAsJson
      parameters:
        - $ref: '#/components/parameters/transactionIdParam'
        - $ref: '#/components/parameters/terminalIdParam'
        - $ref: '#/components/parameters/statusParam'
        - $ref: '#/components/parameters/paymentTypeParam'
        - $ref: '#/components/parameters/datePostFromParam'
        - $ref: '#/components/parameters/datePostToParam'
        - $ref: '#/components/parameters/paymentNarrativeParam'
        - $ref: '#/components/parameters/pageParam'
      responses:
        '200':
          description: Transactions matching filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTransactionsAsJsonResponse'
        '400':
          description: Invalid or incorrect input parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/transactions/csv:
    get:
      tags:
        - transactions
      summary: Download CSV file with transactions
      description: Returns a response with transactions as CSV file with applied filters.
      operationId: getTransactionsAsCSV
      parameters:
        - $ref: '#/components/parameters/transactionIdParam'
        - $ref: '#/components/parameters/terminalIdParam'
        - $ref: '#/components/parameters/statusParam'
        - $ref: '#/components/parameters/paymentTypeParam'
        - $ref: '#/components/parameters/datePostFromParam'
        - $ref: '#/components/parameters/datePostToParam'
        - $ref: '#/components/parameters/paymentNarrativeParam'
      responses:
        '200':
          description: CSV file with transactions matching filters
          content:
            text/csv:
              schema:
                $ref: '#/components/schemas/CSVFileWithTransactions'
        '400':
          description: Invalid or incorrect input parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
  /api/transactions/upload:
    post:
      tags:
        - transactions
      summary: Upload CSV file with transactions
      description: Saves transactions to the database. Size of CSV file should not exceed 4 GB.
      operationId: transactionsUpload
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  $ref: '#/components/schemas/CSVFileWithTransactions'
      responses:
        '201':
          description: Data uploaded successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  row_count:
                    type: integer
                    format: int64
                    example: 87
        '400':
          description: Missing file parameter or invalid CSV file.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessageResponse'
        '500':
          description: Errors were generated while reading the file.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: internal error
components:
  parameters:
    pageParam:
      in: query
      name: page
      description: |
        This parameter is used for breaking the transactions list into small
        parts to prevent memory overflows and speed up requests. Page is equal
        to 1 unless other is specified.
      required: false
      schema:
        $ref: '#/components/schemas/Int64Number'
      example: 7
    transactionIdParam:
      in: query
      name: transaction_id
      required: false
      schema:
        $ref: '#/components/schemas/Int64Number'
      example: 7
    terminalIdParam:
      in: query
      name: terminal_id
      required: false
      schema:
        $ref: '#/components/schemas/Int64Number'
      example: 7
    statusParam:
      in: query
      name: status
      required: false
      schema:
        type: string
        enum:
          - accepted
          - declined
      example: accepted
    paymentTypeParam:
      in: query
      name: payment_type
      required: false
      schema:
        type: string
        enum:
          - cash
          - card
      example: card
    datePostFromParam:
      in: query
      name: date_post_from
      description: This parameter is used together with "date_post_to".
      required: false
      schema:
        type: string
        format: date-time
      example: 2022-08-12 11:25:27
    datePostToParam:
      in: query
      name: date_post_to
      description: This parameter is used together with "date_post_from".
      required: false
      schema:
        type: string
        format: date-time
      example: 2022-08-18 15:25:27
    paymentNarrativeParam:
      in: query
      name: payment_narrative
      description: Checks if the payment narrative of the transaction contains the specified string.
      required: false
      schema:
        type: string
      example: перерахування коштів
  schemas:
    Int64Number:
      type: number
      format: int64
      minimum: 1
    GetTransactionsAsJsonResponse:
      type: object
      properties:
        count:
          type: integer
          format: int64
          example: 27
        next_page:
          type: integer
          format: int64
          nullable: true
          example: 3
        previous_page:
          type: integer
          format: int64
          nullable: true
          example: 1
        results:
          type: array
          items:
            $ref: '#/components/schemas/TransactionObject'
    CSVFileWithTransactions:
      type: string
      example: |
        TransactionId,RequestId,TerminalId,PartnerObjectId,AmountTotal,AmountOriginal,CommissionPS,CommissionClient,CommissionProvider,DateInput,DatePost,Status,PaymentType,PaymentNumber,ServiceId,Service,PayeeId,PayeeName,PayeeBankMfo,PayeeBankAccount,PaymentNarrative
        1,20020,3506,1111,1.00,1.00,0.00,0.00,0.00,2022-08-12 11:25:27,2022-08-12 14:25:27,accepted,cash,PS11111111,13980,Поповнення карток,14232155,pumb,254751,UA713451373919523,Перерахування коштів згідно договору про надання послуг А11/27122 від 19.11.2020 р.
        2,20030,3507,1111,1.00,1.00,0.00,0.00,0.00,2022-08-12 12:36:52,2022-08-12 15:36:53,accepted,cash,PS22222222,13990,Поповнення карток,14332255,privat,255752,UA713461333619513,Перерахування коштів згідно договору про надання послуг А11/27123 від 19.11.2020 р.
        3,20040,3508,1111,3.00,3.00,0.00,0.00,-0.01,2022-08-17 9:53:43,2022-08-17 12:53:44,accepted,cash,PS33333333,14000,Поповнення карток,14432355,privat,256753,UA713471293319503,Перерахування коштів згідно договору про надання послуг А11/27122 від 19.11.2020 р.
    ErrorMessageResponse:
      type: object
      properties:
        message:
          type: string
    TransactionObject:
      type: object
      properties:
        transaction_id:
          type: integer
          example: 1
        request_id:
          type: integer
          example: 20020
        terminal_id:
          type: integer
          example: 3506
        partner_object_id:
          type: integer
          example: 1111
        amount_total:
          type: number
          example: 1.00
        amount_original:
          type: number
          example: 1.00
        commission_ps:
          type: number
          example: 0.00
        commission_client:
          type: number
          example: 0.00
        commission_provider:
          type: number
          example: 0.00
        date_input:
          type: string
          example: 2022-08-12T11:25:27Z
        date_post:
          type: string
          example: 2022-08-12T14:25:27Z
        status:
          type: string
          example: accepted
        payment_type:
          type: string
          example: cash
        payment_number:
          type: string
          example: PS16698205
        service_id:
          type: integer
          example: 13980
        service:
          type: string
          example: Поповнення карток
        payee_id:
          type: integer
          example: 14232155
        payee_name:
          type: string
          example: pumb
        payee_bank_mfo:
          type: integer
          example: 254751
        payee_bank_account:
          type: string
          example: UA713451373919523
        payment_narrative:
          type: string
          example: Перерахування коштів згідно договору про надання послуг А11/27122 від 19.11.2020 р.
